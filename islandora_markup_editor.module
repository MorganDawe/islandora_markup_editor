<?php
/**
 * @file
 * Handles the creation/display of islandora:markupEditorCModel objects.
 */

/**
 * Implements hook_menu().
 */
function islandora_markup_editor_menu() {
  $items['islandora/markupeditor/setup/%islandora_object'] = array(
    'title' => 'Markup Editor Setup',
    'page callback' => 'islandora_markup_editor_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 3),
  );
  $items['islandora/markupeditor/save_data/%islandora_object'] = array(
    'title' => 'Save Data',
    'page callback' => 'islandora_markup_editor_savedata',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER, 3),
  );
  return $items;
}

/**
 * Menu callback for the editor to persist TEI data.
 *
 * @param AbstractObject $fedora_object
 *   The fedora object
 */
function islandora_markup_editor_savedata(AbstractObject $fedora_object) {
  module_load_include('inc', 'islandora_markup_editor', 'includes/utilities');
  try {
    parse_str(file_get_contents('php://input'), $put);
    // @codingStandardsIgnoreStart
    $data = $put['text'];
    $cwrc = str_replace('<br>', '<br />', $data);
    // @codingStandardsIgnoreEnd
    $cwrc = str_replace('&', '&amp;', $cwrc);
    // Update ds.
    if (!isset($fedora_object["OBJ"])) {
      $obj_ds = $fedora_object->constructDatastream('OBJ', 'M');
      $fedora_object->ingestDatastream($obj_ds);
    }
    else {
      $obj_ds = $fedora_object["OBJ"];
    }
    $obj_ds->setContentFromString($cwrc);

    // Sanitize the schema URL, incase it gets managled during transport.
    $schema = html_entity_decode(stripslashes(check_plain($put['schema'])), ENT_QUOTES, 'UTF-8');
    islandora_markup_editor_add_tei_processing_instruction($fedora_object, $schema);

    drupal_json_output($cwrc);
  }
  catch (Exception $e) {
    watchdog('islandora_markup_editor',
      'Failed to set OBJ datastream content for pid @pid</br>code: @code<br/>message: @msg',
      array(
        '@pid' => $fedora_object->id,
        '@code' => $e->getCode(),
        '@msg' => $e->getMessage(),
      ),
      WATCHDOG_ERROR
    );
    drupal_json_output(array("Error" => "An error occured updating "));
  }
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_markup_editor_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  // Markup Editor Content Model.
  $markup_editor_model = $connection->repository->constructObject('islandora:markupEditorCModel');
  $markup_editor_model->owner = 'fedoraAdmin';
  $markup_editor_model->label = 'Islandora Markup Editor Content Model';
  $markup_editor_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $markup_editor_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_ds_composite_model.xml", FALSE);
  $markup_editor_model->ingestDatastream($datastream);
  // Markup Editor Collection.
  $markup_editor_collection = $connection->repository->constructObject('islandora:markup_editor_collection');
  $markup_editor_collection->owner = 'fedoraAdmin';
  $markup_editor_collection->label = 'Markup Editor Collection';
  $markup_editor_collection->models = 'islandora:collectionCModel';
  $markup_editor_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', variable_get('islandora_repository_pid', 'islandora:root'));
  // Collection Policy Datastream.
  $datastream = $markup_editor_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_collection_policy.xml", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $markup_editor_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);
  return array(
    'islandora_markup_editor' => array(
      'title' => 'Islandora markup editor',
      'objects' => array(
        $markup_editor_model,
        $markup_editor_collection,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_markup_editor_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  return array(
    'Markup Editor MODS form' => array(
      'form_file' => "$module_path/xml/islandora_markup_editor_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_markup_editor_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_markup_editor_mods_form' => array(
      'content_model' => 'islandora:markupEditorCModel',
      'form_name' => 'Markup Editor MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_markup_editor_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_markup_editor' => array(
      'template' => 'theme/islandora-markup-editor',
      'pattern' => 'islandora_markup_editor__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_library().
 */
function islandora_markup_editor_library() {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  $items = array();
  $items['cwrcwriter'] = array(
    'title' => t('CWRC-Writer Library'),
    'version' => '1.0',
    'js' => array(
      "$module_path/CWRC-Writer/src/js/config.js" => array(),
      "$module_path/CWRC-Writer/src/js/lib/require/require.js" => array(),
      "$module_path/CWRC-Writer/src/js/layout.js" => array(),
    ),
    'css' => array(
      "$module_path/CWRC-Writer/src/css/editor.css" => array(),
      "$module_path/CWRC-Writer/src/css/style.css" => array(),
      "$module_path/CWRC-Writer/src/css/islandora_style.css" => array(),
      "$module_path/CWRC-Writer/src/css/layout-default-latest.css" => array(),
      "$module_path/CWRC-Writer/src/js/lib/snippet/jquery.snippet.css" => array(),
      "$module_path/CWRC-Writer/src/smoothness/jquery-ui-1.10.4.custom.css" => array(),
      "$module_path/CWRC-Writer/src/js/lib/bootstrap/bootstrap.css" => array(),
      "$module_path/CWRC-Writer/src/js/cwrcDialogs/css/datepicker.css" => array(),
      "$module_path/CWRC-Writer/src/js/cwrcDialogs/css/cD.css" => array(),
    ),
  );
  return $items;
}

/**
 * Implements hook_preproccess().
 *
 * When theming this from another module, set the
 * flag '$variables['custom_js']' to TRUE, and supply
 * your own .js init scripts via drupal_add_js in the
 * other modules preprocess function. See
 * islandora_critical_edition_preprocess_islandora_critical_edition()
 * for an example implementation.
 */
function islandora_markup_editor_preprocess_islandora_markup_editor(&$variables) {
  module_load_include('inc', 'islandora_markup_editor', 'includes/utilities');
  $module_path = drupal_get_path('module', 'islandora_markup_editor');

  // Add custom drupal settings for this implementation of the
  // CWRC-Writer library.
  islandora_markup_editor_add_markup_editor_drupal_settings($variables);

  // Add the CWRC-Writer library.
  drupal_add_library('islandora_markup_editor', 'cwrcwriter');

  // Add our custom css files.
  islandora_markup_editor_add_files_from_dir($module_path . "/css", "css");

  // Uses the $variables['custom_js'] to flag this theme preprocess from
  // another module, indicating an override to the default initilization of
  // the markup editor module.
  $custom_js = isset($variables['custom_js']) ? $variables['custom_js'] : $module_path . "/js";

  // Mindlessly add js files from the supplied directory.
  if ($custom_js !== TRUE) {
    islandora_markup_editor_add_files_from_dir($custom_js);
  }
}

/**
 * Menu callback to provide setup info for the cwrc-writer/viewer.
 *
 * @param AbstractObject $fedora_object
 *   Fedora object to provide setup for.
 */
function islandora_markup_editor_setup(AbstractObject $fedora_object) {
  global $user;
  module_load_include('inc', 'islandora_basic_collection', 'includes/utilities');
  module_load_include('inc', 'islandora_paged_content', 'includes/utilities');

  $stroke_width = variable_get('image_annotation_annotation_stroke_width', '1%');
  $pages = array();
  $results = array();
  $results['uid'] = $user->uid;
  $results['position'] = "1";
  $results['pages'] = $pages[0] = $fedora_object->id;
  $results['title'] = $fedora_object->label;
  $results['no_edit'] = FALSE;
  $results['page_count'] = 1;
  $results['islandora_anno_stroke_width'] = '1%';

  $place_entity_collection = variable_get('islandora_entities_places_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['places'] = url('islandora/object/' . $place_entity_collection . '/manage/overview/ingest');
  $event_entity_collection = variable_get('islandora_entities_events_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['events'] = url('islandora/object/' . $event_entity_collection . '/manage/overview/ingest');
  $organization_entity_collection = variable_get('islandora_entities_organizations_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['organizations'] = url('islandora/object/' . $organization_entity_collection . '/manage/overview/ingest');
  $person_entity_collection = variable_get('islandora_entities_people_collection', 'islandora:entity_collection');
  $results['create_entity_callbacks']['people'] = url('islandora/object/' . $person_entity_collection . '/manage/overview/ingest');

  drupal_json_output($results);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_markup_editor_islandora_markupEditorCModel_islandora_view_object($object, $page_number, $page_size) {
  return theme('islandora_markup_editor', array('islandora_object' => $object));
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_markup_editor_islandora_markupEditorCModel_islandora_ingest_steps() {
  return array(
    'islandora_tei_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_markup_editor_tei_upload_form',
      'module' => 'islandora_markup_editor',
      'file' => 'includes/tei_upload.form.inc',
    ),
  );
}
